# version: '3.8'

services:
  frontend:
    container_name: hooklab-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4173:4173"
    networks:
      - app-network
    restart: always
    healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:4173"]
          interval: 30s
          timeout: 10s
          retries: 5
    volumes:
      - frontend-dist:/code/dist

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hooklab-backend
    ports:
      - "3030:80"
    networks:
      - app-network
    env_file:
      - backend/.env
    depends_on:
      - frontend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always
    volumes:
      - frontend-dist:/code/dist/src/app

  spreadsheet:
    build:
      context: ./spreadsheet
      dockerfile: Dockerfile
    container_name: hooklab-spreadsheet
    ports:
      - "4015:4015"
    networks:
      - app-network
    env_file:
      - spreadsheet/.env
    restart: always
    depends_on:
      - backend
    # depends_on:
    #   rabbitmq:
    #     condition: service_healthy


  pricing:
    build:
      context: ./pricing
      dockerfile: Dockerfile
    container_name: hooklab-pricing
    ports:
      - "3999:3999"
    networks:
      - app-network
    env_file:
      - pricing/.env
    restart: always
    depends_on:
      - backend

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - "5673:5672"
      - "15673:15672" # Porta de gerenciamento web
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=user
      - RABBITMQ_HOST=localhost
      - RABBITMQ_PORT=5672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - app-network
    restart: always

volumes:
  rabbitmq_data:
  frontend-dist:
  export:

networks:
  app-network:
    driver: bridge